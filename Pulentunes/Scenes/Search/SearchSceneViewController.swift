//
//  SearchSceneViewController.swift
//  Pulentunes
//
//  Created by Diego Alexander Salazar on 10/15/19.
//  Copyright (c) 2019 Diego Alexander Salazar. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchSceneViewProtocol: class {
    func displaySomething()
}

class SearchSceneViewController: UIViewController, SearchSceneViewProtocol {
    var interactor: SearchSceneInteractorProtocol?
    var router: (NSObjectProtocol & SearchSceneRoutingLogic & SearchSceneDataPassing)?
    @IBOutlet weak var listTableView: UITableView!
  
    // MARK: View lifecycle
  
    override func viewDidLoad() {
        super.viewDidLoad()
        setup()
        doSomething()
    }
  
    // MARK: Do something
    func doSomething() {
        //let request = SearchScene.Something.Request()
        interactor?.search()
        //interactor?.doSomething(request: request)
    }
  
    func displaySomething() {
        //nameTextField.text = viewModel.name
    }
}

extension SearchSceneViewController: UITableViewDataSource {
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 20
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = tableView.dequeueReusableCell(withIdentifier: SearchListTableViewCell.identifier, for: indexPath) as? SearchListTableViewCell else {
            return UITableViewCell()
        }
        let item = SearchListViewModel.Item(title: "With or without u",
                                            coverImage: UIImage(named: "dafaultAlbum"),
                                            artist: "Sting",
                                            album: "About us")
        cell.setup(forViewModel: item)
        
        return cell
    }
}

// MARK: - UITableViewDelegate

extension SearchSceneViewController: UITableViewDelegate {

    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 120
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        // Segue
    }
}

// MARK: Routing

extension SearchSceneViewController {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
}

private extension SearchSceneViewController {
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = SearchSceneInteractor()
        let presenter = SearchScenePresenter()
        let router = SearchSceneRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
        listTableView.delegate = self
        listTableView.dataSource = self
        listTableView.separatorStyle = .none
    }
}
